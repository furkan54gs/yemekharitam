@model MvcCF5.Models.UserAccount

@{
    ViewBag.Title = "Siparişi Onayla";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <style>
        #map {
            height: 400px;
            width: 450px;
        }
    </style>

}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="column">
            <div class="form-horizontal">
                <div class="container" style="min-height:900px;margin-top:50px">
                    <div class="bodyInner">
                        <h3>Siparişi Onayla</h3>
                        <hr />

                        <h4>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</h4>
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "Ad ve Soyad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Tel, "Telefon", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, "Adres", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", rows = "5", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            @*<input id="takeAddress" type="button" class="btn btn-primary" value="Adresi Getir">*@
                        </div>

                        <div class="form-group">
                            @Html.Label("Sipariş Notu", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextArea("note", new { @class = "form-control", rows = "5", @required = "required" })
                            
                            </div>
                        </div>

                        <div class="form-group" hidden>
                            @Html.LabelFor(model => model.Longtitude, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(model => model.Longtitude, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Longtitude, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" hidden>
                            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <br />

                        <div class="form-group">
                            <h4>Ödeme Seçeneği</h4>
                        </div>

                        <div class="container">
                            <ul class="nav nav-tabs">
                                <li class="active"><a style="color:#2a2b2b" data-toggle="tab" href="#home">Kapıda</a></li>
                                <li><a style="color:#2a2b2b" data-toggle="tab" href="#menu1">Kredi Kartı</a></li>
                            </ul>
                            <div class="form-group">

                                <div class="tab-content">
                                    <div id="home" class="tab-pane fade in active">
                                        <br />
                                        <br />
                                        <div class="form-group ">
                                            <label for="email" class="control-label col-lg-2"> Toplam Tutar : </label>
                                            <div class="col-lg-1">
                                                <b class="form-control single-line">@ViewBag.total ₺</b>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="menu1" class="tab-pane fade">
                                        <br />
                                        <div class="form-group ">
                                            <label for="kname" class="control-label col-lg-1">Adı Soyadı : </label>
                                            <div class="col-lg-4">
                                                @Html.Editor("kname", new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label for="kno" class="control-label col-lg-1">Kart No : </label>
                                            <div class="col-lg-4">
                                                @Html.Editor("kno", new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label for="kexdate" class="control-label col-lg-1">Son kul. tarihi : </label>
                                            <div class="col-lg-1">
                                                <select class="form-control single-line">
                                                    <option>Ay</option>
                                                    <option>Ocak
                                                    <option>Şubat
                                                    <option>Mart
                                                    <option>Nisan
                                                    <option>Mayıs
                                                    <option>Haziran
                                                    <option>Temmuz
                                                    <option>Ağustos
                                                    <option>Eylül
                                                    <option>Ekim
                                                    <option>Kasım
                                                    <option>Aralık
                                                </select>
                                            </div>

                                            <div class="col-lg-1">
                                                <select class="form-control single-line">
                                                    <option>Yıl</option>
                                                    <option>2029
                                                    <option>2028
                                                    <option>2027
                                                    <option>2026
                                                    <option>2025
                                                    <option>2024
                                                    <option>2023
                                                    <option>2022
                                                    <option>2021
                                                    <option>2020
                                                    <option>2019
                                                </select>
                                            </div>

                                            <label for="kcvc" class="control-label col-lg-1">CVC No : </label>
                                            <div class="col-lg-1">
                                                @Html.Editor("kcvc", new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                            </div>
                                        </div>
                                        <br />
                                        <br />
                                        <div class="form-group ">
                                            <label for="email" class="control-label col-lg-2"> Toplam Tutar : </label>
                                            <div class="col-lg-1">
                                                <b class="form-control single-line">@ViewBag.total ₺</b>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div style="text-align:right" class="col-md-offset-2 col-md-4">
                                    <input type="submit" value="Siparişi Onayla" class="btn btn-success btn-lg" />
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="column">
            <div style="position:absolute;top:170px;right:100px;" id="map"></div>
        </div>
    </div>
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAXx4aEGCsJv_BedqPOehaxCjyVT9i25ls&callback=initMap"
        async defer></script>
<script type="text/javascript">
        var map;

        function initMap() {


            var x = '@Model.Latitude';
            var y = '@Model.Longtitude';

            x = x.replace(',', '.');
            y = y.replace(',', '.');

            var latitude = parseFloat(x); // YOUR LATITUDE VALUE
            var longitude = parseFloat(y); // YOUR LONGITUDE VALUE

            var myLatLng = { lat: latitude, lng: longitude };

            map = new google.maps.Map(document.getElementById('map'), {
                center: myLatLng,
                zoom: 13,
                disableDoubleClickZoom: true, // disable the default map zoom on double click
            });

            // Update lat/long value of div when anywhere in the map is clicked

            google.maps.event.addListener(map, 'click', function (event) {

                //var geocoder = new google.maps.Geocoder();
                //geocoder.geocode({ 'latLng': myLatLng }, function (results, status) {
                //    if (status !== google.maps.GeocoderStatus.OK) {
                //        alert(status);
                //    }
                //    // This is checking to see if the Geoeode Status is OK before proceeding
                //    if (status == google.maps.GeocoderStatus.OK) {
                //        console.log(results);
                //        var address = (results[0].formatted_address);
                //        document.getElementById('Address').value = address;
                //    }
                //});

                //büyük ihtimal places api etkin olmadığı için sıkıntı çıkarıyo

                document.getElementById('Latitude').value = event.latLng.lat().toString().replace('.', ',');
                document.getElementById('Longtitude').value = event.latLng.lng().toString().replace('.', ',');

            });

            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                //title: 'Hello World'

                // setting latitude & longitude as title of the marker
                // title is shown when you hover over the marker
                title: latitude + ', ' + longitude
            });

            // Update lat/long value of div when the marker is clicked
            marker.addListener('click', function (event) {
                document.getElementById('Latitude').value = event.latLng.lat().toString().replace('.', ',');
                document.getElementById('Longtitude').value = event.latLng.lng().toString().replace('.', ',');
            });

            // Create new marker on double click event on the map
            google.maps.event.addListener(map, 'dblclick', function (event) {
                var marker = new google.maps.Marker({
                    position: event.latLng,
                    map: map,
                    title: event.latLng.lat() + ', ' + event.latLng.lng()
                });

                // Update lat/long value of div when the marker is clicked
                marker.addListener('click', function () {
                    document.getElementById('Latitude').value = event.latLng.lat().toString().replace('.', ',');
                    document.getElementById('Longtitude').value = event.latLng.lng().toString().replace('.', ',');
                });
            });

            // Create new marker on single click event on the map
            /*google.maps.event.addListener(map,'click',function(event) {
                var marker = new google.maps.Marker({
                  position: event.latLng,
                  map: map,
                  title: event.latLng.lat()+', '+event.latLng.lng()
                });
            });*/
        }
</script>
